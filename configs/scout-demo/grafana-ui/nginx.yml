apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  10240;
    }
    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';

      access_log	/var/log/nginx/access.log main;

      server {
          listen       80;
          server_name  _;

          location / {
              root   html;
              index  index.html index.htm;
          }
      }
      include /etc/nginx/virtualhost/virtualhost.conf;
    }
  virtualhost.conf: |
    upstream app {
      server grafana.grafana-ui.svc:3000;
    }

    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }

    server {
      listen 443 ssl ;
      server_name scout-demo-ui.centralindia.cloudapp.azure.com;
      root /usr/share/nginx/html;
      index index.html index.htm;

      access_log /var/log/nginx/app.access_log main;
      error_log /var/log/nginx/app.error_log;

      ssl_certificate /etc/grafana/certs/tls.crt;
      ssl_certificate_key /etc/grafana/certs/tls.key;

      add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
      ssl_prefer_server_ciphers on;
      ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
      ssl_ciphers         HIGH:!aNULL:!MD5;

      location / {
        proxy_set_header Host $http_host;
        proxy_pass http://app/;
      }

        location /api/live/ {
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_set_header Host $http_host;
          proxy_pass http://app;
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 443
        volumeMounts:
        - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          name: nginx-conf
        - mountPath: /var/log/nginx
          name: log
        - name: grafana-certs
          mountPath: /etc/grafana/certs/
          readOnly: true
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
          items:
            - key: nginx.conf
              path: nginx.conf
            - key: virtualhost.conf
              path: virtualhost/virtualhost.conf # dig directory
      - name: log
        emptyDir: {}
      - name: grafana-certs
        secret:
          secretName: grafana-tls-secret
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  annotations:
    service.beta.kubernetes.io/azure-dns-label-name: scout-demo-ui
spec:
  type: LoadBalancer
  ports:
  - port: 443
    targetPort: 443
  selector:
    app: nginx

