apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana-enterprise:10.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 150m
              memory: 250Mi
            limits:
              cpu: 400m
              memory: 500Mi
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: credentials-grafana
                  key: admin_username
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: credentials-grafana
                  key: admin_password
            - name: GF_AUTH_AZUREAD_AUTH_URL
              valueFrom:
                secretKeyRef:
                  name: grafana-config-secret
                  key: GRAFANA_AAD_AUTH_URL
            - name: GF_AUTH_AZUREAD_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: grafana-config-secret
                  key: GRAFANA_AAD_CLIENT_ID
            - name: GF_AUTH_AZUREAD_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: grafana-config-secret
                  key: GRAFANA_AAD_CLIENT_SECRET
            - name: GF_AUTH_AZUREAD_TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: grafana-config-secret
                  key: GRAFANA_AAD_TOKEN_URL
          volumeMounts:
          - name: config-volume
            mountPath: /etc/grafana/
          - mountPath: /var/lib/grafana
            name: grafana-pv
          - name: grafana-certs
            mountPath: /etc/grafana/certs/
            readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: grafana-config-ini
          items:
          - key: grafana.ini
            path: grafana.ini
      - name: grafana-pv
        # emptyDir: {}
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-certs
        secret:
          secretName: grafana-tls-secret
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key